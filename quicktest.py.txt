import logging
import discord
import names  # for the fake name
import random
from faker import Faker  # for the fake address

# Object instances
client = discord.Client()
fake = Faker()

# File logger
logger = logging.getLogger('discord')
logger.setLevel(logging.INFO)
handler = logging.FileHandler(
    filename='discord.log', encoding='utf-8', mode='w')
handler.setFormatter(logging.Formatter(
    '%(asctime)s:%(levelname)s:%(name)s: %(message)s'))
logger.addHandler(handler)

# Character's Father's profile class


class Father():
    name = names.get_full_name(gender='male')
    money = random.randrange(20, 101, 1)  # selects a number from 20 to 100.
    relationship = 'Father'
    relationship_str = 100
    age = random.choice([27, 28, 29, 30, 31, 32, 33])
    # Religiousness
    # generosity
    # location
    # occupation (has to relate to the money and education)
    # education

# Character's Father's profile class


class Mother():
    name = names.get_full_name(gender='female')
    money = random.randrange(20, 101, 1)  # selects a number from 20 to 100.
    relationship = 'Mother'
    relationship_str = 100
    age = random.choice([25, 26, 27, 28, 29])
    # Religiousness
    # generosity
    # location
    # occupation (has to relate to the money and education)
    # education

# Character Profile class


class Profile:
    def __init__(self, username, userID):
        self.username = username
        self.userID = userID
        age = 0
        gender = random.choice(['male', 'female'])
        name = names.get_full_name(gender=gender)
        occupation = 'none'
        bank = 0
        bIsDead = False
        location = fake.address()
        father = Father()
        mother = Mother()
        # Corestats
        happiness = random.randrange(85, 101, 1)
        health = random.randrange(80, 101, 1)
        smarts = random.randrange(5, 97, 1)
        looks = random.randrange(1, 101, 1)

# Events


@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))
    logger.info('We have logged in as {0.user}'.format(client))


@client.event
async def on_message(message):
    if message.author == client.user:
        return

# !help
    if message.content.startswith('!help'):
        with open('helpfile.txt') as f:
            await message.channel.send(f.read())

# !create
    if message.content.startswith('!create'):
        # profile creation
        logger.info('{0} invoked !create command'.format(message.author))
        character = Profile(message.author,message.author.id)
        

# !profile
    if message.content.startswith('!profile'):
        # profile display
        logger.info('{0} invoked !profile command'.format(message.author))


# initialize the loop
client.run('{0}'.format(open('token.txt', 'r').read()))
